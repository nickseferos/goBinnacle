# Scaffolding generated by Casein v5.1.1.5

module Casein
  class EditorialsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Editorials'
  		@editorials = Editorial.order(sort_order(:title)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View editorial'
      @editorial = Editorial.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new editorial'
    	@editorial = Editorial.new
    end

    def create
      @editorial = Editorial.new editorial_params
    
      if @editorial.save
        flash[:notice] = 'Editorial created'
        redirect_to casein_editorials_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new editorial'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update editorial'
      
      @editorial = Editorial.find params[:id]
    
      if @editorial.update_attributes editorial_params
        flash[:notice] = 'Editorial has been updated'
        redirect_to casein_editorials_path
      else
        flash.now[:warning] = 'There were problems when trying to update this editorial'
        render :action => :show
      end
    end
 
    def destroy
      @editorial = Editorial.find params[:id]

      @editorial.destroy
      flash[:notice] = 'Editorial has been deleted'
      redirect_to casein_editorials_path
    end
  
    private
      
      def editorial_params
        params.require(:editorial).permit(:title, :author, :date, :body, :image)
      end

  end
end